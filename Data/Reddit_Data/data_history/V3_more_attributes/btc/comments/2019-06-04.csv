body;score;nb_replies;stickied;author;id;post_title;post_link
No you can't indeed.;0;1;False;knight222;epyzvo3;A Reminder Why You Shouldn’t Use Google.;https://i.redd.it/7ssrisizq0231.jpg
"IDK, I searched the same thing and it even came up with the news results at the top. Plus, based on my analysis of the outage, and the fact it seemed to indiscriminately effect all Google's services, I'd say it was likely due to improper BGP configuration on the part of an ISP- possibly Level 3 Communications, or one of their (physical or virtual) sub-carriers. Also possibly due to a large carrier neutral IXP going down, like one of the major ones in NYC. 

\*BGP (border gateway protocol) is an exterior gateway category routing protocol which is used to advertise the network's reachable through AS's (Autonomous Systems: the backbone of the internet which use ASNs, or autonomous system names- 8 or 16 bit integer IDs, *not* IP addressing- and represent complete physical networks; they can be associated with as little as one, to thousands of networks; they are connected to each other at peering points to other AS's, which can be upstream systems connected to more AS's and closer to, or to the level one ""backbone"", downstream AS's which are often private networks like banks and universities with as little as a single connection to the upstream, or peer AS's which are at the same organizational level but have a connection to another AS; the most important connections occur at IXPs (internet exchange points), usually at carrier neutral data centers (which charge for rack space and high speed, redundant connectivity to multiple ISPs, typically for cloud service providers), while allowing ISPs to connect for free (generally); an IXP is like a central meeting hub for many levels of ISPs- from tier 1- the internet backbone- to tier 2 long distance carriers- to tier 3 large ISPs- and higher order systems like small ISPs, companies and universities). BGP is responsible for advertising the AS's accessible through a particular edge router, along with the IP networks accessible on the AS and manually configured to prioritize connections and data flow. Due to its nature, BGP advertisements propagate throughout the entire internet. Properly configured, a BGP router will have reject rules to reject routes pointing to things like empty IP space, and refuse to forward advertisements for systems it is either not directly connected to- depending on the AS tier, or changes which represent restructuring of higher tier AS's. By default, however, a BGP router will accept all route advertisements it receives. This can lead to massive consequences, since anyone with a AS peering (sometimes relatively small companies), can ""poison"" the BGP routing table (on purpose or by accident)- and if the upstream routers accept and forward the change, it can quickly propagate throughout the internet. This happened a few years ago when Iran (maybe Packistan- I'm drawing a blank now), attempting to blacklist YouTube in their country, poisoned their BGP tables for their national AS's, blackholing (sending traffic to nonexistent networks; YouTube has so many associated public IP's it is situated on it's own AS)- this was meant to stay within the country, but due to a peering with a top tier Taiwanese ISP with no BGP filter, and unfiltered upstream peers with a tier 2 AS and many other AS's at an IXP in HK, most of which were also set to default `accept all', most of Asia and a large portion of Europe lost YouTube connectivity for days. The propagation was only stopped by rejection by the IXP in the US which was connected to the transatlantic fiberoptic from Dublin to LI, NY, rejected the configuration (possibly because, due to the BGP table size, it takes hours to propagate throughout the world, allowing them to take preemptive action, and the fact that they had a much closer connection to the Google AS's than to the source of the improper config). As a result, the US had almost no loss of connectivity. My guess is that, judging by the outrage ground zero and its overall density of report incidence area, AS701, Verizon fios's tier 2 (used for both carrier transport along the east coast and their FTTP FiOS ISP), likely conducted a system wide update to their edge routers, and were in the (time consuming) process of reconfiguring the individual filters on each edge router (must be generally done manually on a case by case basis). At the same time, L3 or Cogent (a parent of L3), accepted an advertisement for one or part of one of Google's large network's to a (my guess would be) small AS owning cloud or VPS provider, or small, terminal (last tier) AS. AS701 is a tier 2, it also has very minimal IPv6 connections, while owning hundreds upon hundreds of large (low) CIDR networks, and connected to hundreds or even thousands of downstream peers, including many tier 3 networks representing smaller commercial ISPs. Their few upstream peers likely blocked the misconfiguration, preventing the spread throughout the entire US. Distant locations from AS701 affected were likely connected to virtual AS's (those connected via direct (usually MPLS driven) links through 1/1.5/XC 2 AS as a virtual direct link- common among secondary mobile opperators), XC carrier neutral cloud providers, etc.).

Point being. The outage was highly unlikely the fault of Google- although they were extremely quick to assist in remedying the situation (probably manual correction of BGP routers and/or reboots of the edge routers). It is possible the BGP table poisoning originated from Google itself, if they tried to physically reconfigure their cloud infrastructure, but I doubt that, considering their servers are located in the midwest and CA, where outrages were only rarely reported. It is also possible a physical link down between an IXP or AS701 or Cogent/L3 and Google's East Coast IXP connections- but that would have likely affected much more connectivity issues.

More evidence of this was my FiOS on the NYCMNY-FTTP segment of AS701 had complete loss of connectivity to 90% Google services; while my mobile AT&T network had slower, higher latency, more overall hops to destination (indicative of losses of routes through AS701), but other than that, and failure of the Google DNS over HTTPS (which makes sense, considering the protocol), all services were accessible.

Point being, this likely wasn't even a Google issue- I think the only reason they're not giving explanation is because it's very difficult to pinpoint the exact responsible party in a situation like this. Particularly because it involves independent mistakes on the part many parties. Those at fault were also likely Google partners and considering the outage was not devastating, nor was it one which Google if at any financial liability for- it's best for them to just say it's fixed now and be done with it.

Also, in an unrelated note, I thought my phone was broken, since I thought I lost all internet connectivity (WiFi and LTE). Although certain apps were working (?). Took me 20 minutes to realize that DNS resolutions were failing. The issue was my HTTPS-DNS configuration using `google.dns' (btw, only Android DNS over TLS or HTTPS config that actually works- while some may seem to work, they provide no security- sense why cloudfare's option went from telling people to use the built in setting, to the localhost VPN solution that has been the workaround forever). Google's public DNS seemed slow but unaffected.

\~\~\~**_Also, not at all sure where this fits into B[T]C\/H LOL._**\~\~\~";3;0;False;Mypassispass123;epxp4ja;A Reminder Why You Shouldn’t Use Google.;https://i.redd.it/7ssrisizq0231.jpg
"*Googles ""Massive Google Cloud Outage""*

i_dont_believe_you.gif";1;0;False;TheTarquin;epy9no9;A Reminder Why You Shouldn’t Use Google.;https://i.redd.it/7ssrisizq0231.jpg
"The only thing I like about Chrome is QUIK protocol, and we are long overdue for a reliable datagram, order-independent (out of order), securely encrypted protocol. UDP is a bandwidth waste, highly unreliable, and not an internet protocol, and TLS was not made for datagram protocols, so DTLS is terrible and highly exploitable if using an insecure TLS level or one with ECC and low order curves, and any using CBC ciphers with deflate or in grip with EXPORT cyphers, since it is easy to cause excessive link congestion, send bad packets to a target and/or plain retransmission requests to the source and force retransmission, leading to an easy way to collect excessive packets, analogous (in a way) to IV replay injections attacks of WEP (while data extraction or on-wire packet manipulation is far more complicated that cracking a WEP PSK, it is orders of magnitude easier than the same for TLS)- while UDP is OK for local-scope uses, it is not for global-scope, IMO.

**That being said, considering QUICK is really only being worked on by Google, is still in beta, uses ECC and only supports one curve (C255) and 128bit AES, using ECDSA for PFS (weak), and the fact that it is not an IETF/RFC standard yet, and only a partial draft, not even a complete proposal- it is really only used by Google and therefore no better than the AES_128_GCM TLS1.3 that defaults when using other browsers- it is really not useful at the moment**

**_NOTE: webRequest V3 API CAN BE ENABLED IN CHROME VERY EASILY. SIMPLY GO TO 》 chrome:\/\/flags 《 AND ENABLE IT. I RECOMMEND CHROME BETA FOR EVERYONE, AND CHROME DEV (MUCH MORE FEATURE FLAGS AND CUSTOMIZATION) FOR ANYONE WHO KNOWS WHAT THEY'RE DOING, (CHROME CANARY IS OK IF YOU DON'T MIND DEALING WITH THE QUIRKS IN TURN FOR SOME COOL NEW FEATURES)._**

*AGAIN, __CHROME:\/\/FLAGS__ THIS IS A MUST FOR ANYONE USING CHROME- THE ABILITY TO CUSTOMIZE, TURN UP PRIVACY SETTINGS, TURN ON NEW FEATURES, CHANGE THE LOOK AND FEEL OF THE BROWSER, ALTER PROCESS MANAGEMENT, PROCESS TIMING, PROCESS THROTTLING, PROCESS PRIORITY AND MORE, OPTIMIZE GPU RENDERING, PERFORM MEMORY OPTIMIZATION, SET DATA SAVING SETTINGS, TURN ON THINGS LIKE PARALLEL DOWNLOADING FOR PERFORMANCE BOOSTS, NEW JAVA API'S, TURN OFF ENDLESS REDIRECTS, CHANGE BACKGROUND TAB LOADING, ETC... AND THAT'S JUST ONE ONE-HUNDRETH OF WHAT CAN BE CUSTOMIZED! IT'S SIMPLER TO THE ABOUT:PREFERENCES PAGE OF FIREFOX, BUT EACH FLAG IN CHROME IS EXPLAINED AND SEARCHABLE- MAKING IT MUCH EASIER TO UNDERSTAND (ALTHOUGH I WOULD RECOMMEND ANYONE INEXPERIENCED TO AVOID MESSING WITH THINGS THEY ARE UNSURE OF- ALTHOUGH YOU CAN ALWAYS CHANGE ONE SETTING AT A TIME, SEE THE EFFECT, AND IF IT BREAKS SOMETHING, TURN IT OFF; YOU CAN ALSO ALWAYS RESET EVERYTHING TO DEFAULT; AVOID SECURITY SETTING IF YOU DONT UNDERSTAND THEM THOUGH). THIS IS AVAILABLE ON WINDOWS, LINUX, MAC (NOT SURE ABOUT IOS), AND ANDROID, AND, IF YOU USE CHROME FOR YOUR WEBVIEW IN ANDROID (USED TO BE NECESSARY TO ENABLE VIA DEVTOOLS, BUT I THINK IT'S DEFAULT NOW(?)), IT CAN HELP YOU CUSTOMIZE MANY APPS THAT USE CCT'S (CHROME CUSTOM TABS).*

**Also _chrome:\/\/pages_ will show you all the internal pages (mostly debugging pages) that will help you with configuration. For instance _chrome:\/\/gpu_ will show you any settings (many of which are set wrong by default- as they are generic for all machines of the same OS; while it won't say the exact flag always, the necessary setting can be found by searching the keywords from the highlighted issue) that need to be updated/changed for top performance.**

**SO, IN CONCLUSION, CHROME CAN BE USED WITH ANY AD BLOCKER, YOU JUST NEED TO CHANGE THE FLAGS TO REENABLE THE webRequest v3 API IN CHROME FLAGS. I WOULD RECOMMEND CUSTOMIZING YOUR BROWSER VIA THE FLAGS NO MATTER WHAT. ALSO, I RECOMMEND CHROME DEV, FOR THE INCREASED CONTROL.**

**OH AND IF YOU USE FIREFOX, I HIGHLY RECOMMEND THAT YOU DO THE SAME VIA FIREFOX'S PREFERENCES PAGE (MORE COMPLEX THAN CHROME FLAGS HOWEVER- ALTHOUGH MORE CONTROL, EVEN THOUGH 70% OF THE FIREFOX PREFERENCES ARE POINTLESS/WOULD NEVER REQUIRE CHANGING, FOR GOOGLE FLAGS IT'S ABOUT 50/50.**";1;0;False;Mypassispass123;epxtrsm;A Reminder Why You Shouldn’t Use Google.;https://i.redd.it/7ssrisizq0231.jpg
And for the few times you want to repeat the search on Google, you can try https://startpage.com which shows the same results (or almost) as Google, or add ` !s ` to the search on DuckDuckGo.;1;0;False;gasull;epxrrzz;A Reminder Why You Shouldn’t Use Google.;https://i.redd.it/7ssrisizq0231.jpg
Centralization problems;1;0;False;ROMAD_antivirus;epyg42v;A Reminder Why You Shouldn’t Use Google.;https://i.redd.it/7ssrisizq0231.jpg
Exactly. It's just a fork: not many notable changes.;1;0;False;awecoin;epy5k9j;A Reminder Why You Shouldn’t Use Google.;https://i.redd.it/7ssrisizq0231.jpg
I think the guy was trying to question whether DDG was any better than Google. Still, your point is valid, since the issue is tracking/data retention/data associations and the sale of big data- whereas advertising is, well, just advertising (i.e. you don't scream at a billboard for doing something shady, and you don't accuse commercials on free, broadcast TV of being behind some sort of questionable business ethics).;1;0;False;Mypassispass123;epxur3o;A Reminder Why You Shouldn’t Use Google.;https://i.redd.it/7ssrisizq0231.jpg
Duck duck go is run by a Zionist supremacist, so I dont rate them either.;1;1;False;stewbits22;epyq8l2;A Reminder Why You Shouldn’t Use Google.;https://i.redd.it/7ssrisizq0231.jpg
deleted  ^^^^^^^^^^^^^^^^0.6073  [^^^What ^^^is ^^^this?](https://pastebin.com/FcrFs94k/09728);0;0;False;redditgiveawaytemp2;epzkl4k;A Reminder Why You Shouldn’t Use Google.;https://i.redd.it/7ssrisizq0231.jpg
